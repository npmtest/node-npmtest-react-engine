{"/home/travis/build/npmtest/node-npmtest-react-engine/test.js":"/* istanbul instrument in package npmtest_react_engine */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-engine/lib.npmtest_react_engine.js":"/* istanbul instrument in package npmtest_react_engine */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_engine = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_engine = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-engine/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-engine && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_engine */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_engine\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_engine.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_engine.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_engine.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_engine.__dirname + '/lib.npmtest_react_engine.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-engine/node_modules/react-engine/index.js":"/*-------------------------------------------------------------------------------------------------------------------*\\\n|  Copyright (C) 2016 PayPal                                                                                          |\n|                                                                                                                     |\n|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n|  with the License.                                                                                                  |\n|                                                                                                                     |\n|  You may obtain a copy of the License at                                                                            |\n|                                                                                                                     |\n|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n|                                                                                                                     |\n|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n|  the specific language governing permissions and limitations under the License.                                     |\n\\*-------------------------------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nexports.server = require('./lib/server');\nexports.client = require('./lib/client');\nexports.expressView = require('./lib/expressView');\nexports.reactRouterServerErrors = require('./lib/reactRouterServerErrors');\n","/home/travis/build/npmtest/node-npmtest-react-engine/node_modules/react-engine/lib/server.js":"/*-------------------------------------------------------------------------------------------------------------------*\\\n|  Copyright (C) 2016 PayPal                                                                                          |\n|                                                                                                                     |\n|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n|  with the License.                                                                                                  |\n|                                                                                                                     |\n|  You may obtain a copy of the License at                                                                            |\n|                                                                                                                     |\n|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n|                                                                                                                     |\n|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n|  the specific language governing permissions and limitations under the License.                                     |\n\\*-------------------------------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nvar isString = require('lodash/isString');\nvar assign = require('lodash/assign');\nvar unset = require('lodash/unset');\nvar path = require('path');\nvar util = require('./util');\nvar assert = require('assert');\nvar Config = require('./config.json');\nvar jsesc = require('jsesc');\nvar ReactDOMServer = require('react-dom/server');\nvar debug = require('debug')(require('../package').name);\nvar ReactRouterServerErrors = require('./reactRouterServerErrors');\n\nvar format = require('util').format;\nvar Performance = require('./performance');\n\n// safely require the peer-dependencies\nvar React = util.safeRequire('react');\n\nfunction generateReactRouterServerError(type, existingErrorObj, additionalProperties) {\n  var err = existingErrorObj || new Error('react router match fn error');\n  err._type = type;\n  if (additionalProperties) {\n    assign(err, additionalProperties);\n  }\n\n  return err;\n}\n\nexports.create = function create(createOptions) {\n  createOptions = createOptions || {};\n\n  // safely require the peer-dependencies\n  var React = util.safeRequire('react');\n  var Router;\n  var match;\n  var RouterContext;\n\n  try {\n    Router = require('react-router');\n    match = Router.match;\n\n    // compatibility for both `react-router` v2 and v1\n    RouterContext = Router.RouterContext || Router.RoutingContext;\n  } catch (err) {\n    if (!Router && createOptions.routes) {\n      throw err;\n    }\n  }\n\n  createOptions.scriptType = isString(createOptions.scriptType) ? createOptions.scriptType : Config.scriptType;\n  createOptions.docType = isString(createOptions.docType) ? createOptions.docType : Config.docType;\n  createOptions.renderOptionsKeysToFilter = createOptions.renderOptionsKeysToFilter || [];\n  createOptions.staticMarkup = createOptions.staticMarkup !== undefined ? createOptions.staticMarkup : Config.staticMarkup;\n\n  assert(Array.isArray(createOptions.renderOptionsKeysToFilter),\n      '`renderOptionsKeysToFilter` - should be an array');\n\n  createOptions.renderOptionsKeysToFilter =\n    createOptions.renderOptionsKeysToFilter.concat(Config.defaultKeysToFilter);\n\n  if (createOptions.performanceCollector) {\n    assert.equal(typeof createOptions.performanceCollector,\n        'function',\n        '`performanceCollector` - should be a function');\n  }\n\n  // the render implementation\n  return function render(thing, options, callback) {\n\n    var perfInstance;\n\n    if (createOptions.performanceCollector) {\n      perfInstance = Performance(thing);\n    }\n\n    function done(err, html) {\n      if (!options.settings['view cache']) {\n        // remove all the files under the express's view folder from require cache.\n        // Helps in making changes to react views without restarting the server.\n        util.clearRequireCache(createOptions.routesFilePath);\n        util.clearRequireCacheInDir(options.settings.views, options.settings['view engine']);\n      }\n\n      if (createOptions.performanceCollector) {\n        createOptions.performanceCollector(perfInstance());\n      }\n\n      callback(err, html);\n    }\n\n    function renderAndDecorate(component, data, html) {\n      if (createOptions.staticMarkup) {\n        // render the component to static markup\n        html += ReactDOMServer.renderToStaticMarkup(component);\n      } else {\n        // render the component\n        html += ReactDOMServer.renderToString(component);\n\n        // the `script` tag that gets injected into the server rendered pages.\n        // https://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet#RULE_.233_-_JavaScript_Escape_Before_Inserting_Untrusted_Data_into_JavaScript_Data_Values\n        var script = '<script id=\"'\n          + Config.client.markupId\n          + '\" type=\"'\n          + createOptions.scriptType\n          + '\">'\n          // Escape data for injecting into <script> tag\n          // https://mathiasbynens.be/notes/etago\n          + jsesc(data, {\n              'escapeEtago': true, // old option for escaping in <script> or <style> context\n              'isScriptContext': true, // soon to be new option\n              'compact': true, // minifies\n              'json': true // ensures JSON compatibility\n            })\n          + '</script>';\n\n\n        if (createOptions.docType === '') {\n          // if the `docType` is empty, the user did not want to add a docType to the rendered component,\n          // which means they might not be rendering a full page with `html` and `body` tags\n          // so attach the script tag to just  the end of the generated html string\n          html += script;\n        }\n        else {\n          var htmlTag = createOptions.scriptLocation === 'head' ? '</head>' : '</body>';\n          html = html.replace(htmlTag, script + htmlTag);\n        }\n      }\n\n      return html;\n    }\n\n    if (createOptions.routes && createOptions.routesFilePath) {\n      // if `routesFilePath` property is provided, then in\n      // cases where 'view cache' is false, the routes are reloaded for every render.\n      createOptions.routes = require(createOptions.routesFilePath);\n      if (createOptions.routes.default) {\n        createOptions.routes = createOptions.routes.default;\n      }\n    }\n\n    // initialize the markup string\n    var html = createOptions.docType;\n\n    // create the data object that will be fed into the React render method.\n    // Data is a mash of the express' `render options` and `res.locals`\n    // and meta info about `react-engine`\n    var data = assign({\n      __meta: {\n        // get just the relative path for view file name\n        view: null,\n        markupId: Config.client.markupId\n      }\n    }, options);\n    if (this.useRouter && !createOptions.routes) {\n      return done(new Error('asking to use react router for rendering, but no routes are provided'));\n    }\n\n    // since `unset` mutates the obj, lets clone a copy\n    // Also, we are using JSON.parse(JSON.stringify(data)) to clone the object super fast.\n    // a valid assumption in using this method of cloning at this point: we have only variables\n    // and not any functions in data object - so need for lodash cloneDeep\n    try {\n      data = JSON.parse(JSON.stringify(data));\n      createOptions.renderOptionsKeysToFilter.forEach(function(key) {\n        unset(data, key);\n      });\n    } catch (parseErr) {\n      return done(parseErr);\n    }\n\n    try {\n      if (this.useRouter) {\n        return match({ routes:createOptions.routes, location:thing}, function reactRouterMatchHandler(error, redirectLocation, renderProps) {\n          if (error) {\n            debug('server.js match 500 %s', error.message);\n            var err = generateReactRouterServerError(ReactRouterServerErrors.MATCH_INTERNAL_ERROR, error);\n            return done(err);\n          } else if (redirectLocation) {\n            debug('server.js match 302 %s', redirectLocation.pathname + redirectLocation.search);\n            var err = generateReactRouterServerError(ReactRouterServerErrors.MATCH_REDIRECT, null, {\n              redirectLocation: redirectLocation.pathname + redirectLocation.search\n            });\n            return done(err);\n          } else if (renderProps) {\n            renderProps.createElement = function(Component, routerProps) {\n              // Other than fusing the data object with the routerProps, there is no way\n              // to pass data into the routing context of react-router during a server render.\n              // since we are going to use `assign` to fuse the routerProps and the actual\n              // data object, we need to make sure that there are no properties between the two object\n              // with the same name at the root level. (Having two properties with the same name breaks assign.)\n              // Info on why we need to fuse the two objects?\n              // --------------------------------------------\n              // * https://github.com/ngduc/react-setup/issues/10\n              // * https://github.com/reactjs/react-router/issues/1969\n              // * http://stackoverflow.com/questions/36137901/react-route-and-server-side-rendering-how-to-render-components-with-data\n              if (options.settings.env !== 'production') {\n                var intersection = Object.keys(routerProps).filter(function(elem) {\n                  return Object.keys(data).indexOf(elem) !== -1;\n                });\n                if (intersection.length) {\n                  var errMsg = 'Your data object cannot have property(ies) named: \"' +\n                    intersection +\n                    '\"\\n Blacklisted property names that cannot be used: \"' +\n                    Object.keys(routerProps) +\n                    '\"\\n'\n                  throw new Error(errMsg);\n                }\n              }\n\n              // define a createElement strategy for react-router that transfers data props to all route \"components\"\n              // for any component created by react-router, fuse data object with the routerProps\n              // NOTE: This may be imposing too large of an opinion?\n              return React.createElement(Component, assign({}, data, routerProps));\n            };\n\n            return done(null, renderAndDecorate(React.createElement(RouterContext, renderProps), data, html));\n          } else {\n            debug('server.js match 404');\n            var err = generateReactRouterServerError(ReactRouterServerErrors.MATCH_NOT_FOUND);\n            return done(err);\n          }\n        });\n      }\n      else {\n        // path utility to make path string compatible in different OS\n        // ------------------------------------------------------------\n        // use `path.normalize()` to normalzie absolute view file path and absolute base directory path\n        // to prevent path strings like `/folder1/folder2/../../folder3/exampleFile`\n        // then, derive relative view file path\n        // and replace backslash with slash to be compatible on Windows\n        data.__meta.view = path.normalize(thing)\n          .replace(path.normalize(options.settings.views), '').substring(1)\n          .replace('\\\\', '/');\n\n        var view = require(thing);\n\n        // Check for an ES6 `default` property on the module export\n        // ------------------------------------------------------------\n        // TypeScript and Babel users that leverage ES6 module depend on this\n        // e.g. `export default function MyView() {};`\n        if (view.default) {\n          view = view.default;\n        }\n\n        // create the Component using react's createFactory\n        var component = React.createFactory(view);\n        return done(null, renderAndDecorate(component(data), data, html));\n      }\n    }\n    catch (err) {\n\n      // on error, pass to the next\n      // middleware in the chain!\n      return done(err);\n    }\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-react-engine/node_modules/react-engine/lib/util.js":"/*-------------------------------------------------------------------------------------------------------------------*\\\n|  Copyright (C) 2016 PayPal                                                                                          |\n|                                                                                                                     |\n|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n|  with the License.                                                                                                  |\n|                                                                                                                     |\n|  You may obtain a copy of the License at                                                                            |\n|                                                                                                                     |\n|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n|                                                                                                                     |\n|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n|  the specific language governing permissions and limitations under the License.                                     |\n\\*-------------------------------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nvar _require;\nvar glob = require('glob');\nvar path = require('path');\nvar format = require('util').format;\nvar debug = require('debug')(require('../package.json').name);\n\nfunction clearRequireCache(file) {\n  delete require.cache[file];\n}\n\n// clears require cache of files that have\n// extension `extension` from a given directory `dir`.\nfunction clearRequireCacheInDir(dir, extension) {\n\n  var options = {\n    cwd: dir\n  };\n\n  // find all files with the `extension` in the express view directory\n  // and clean them out of require's cache.\n  var files = glob.sync('**/*.' + extension, options);\n\n  files.map(function(file) {\n    clearRequireCache(dir + path.sep + (file.split(/\\\\|\\//g).join(path.sep)));\n  });\n}\n\n// workaround when `npm link`'ed for development\n// Force Node to load modules from linking parent.\n// https://github.com/npm/npm/issues/5875\n// plus React doesn't LIKE (at all) when\n// multiple copies of React are used around\n// https://github.com/facebook/react/issues/1939\nfunction safeRequire(name) {\n\n  var module;\n\n  try {\n    module = require(name);\n  }\n  catch (err) {\n    // lazy load the module\n    if (!_require) {\n      _require = require('parent-require');\n    }\n\n    debug(format('%j', err));\n    module = _require(name);\n  }\n\n  return module;\n}\n\nexports.safeRequire = safeRequire;\nexports.clearRequireCache = clearRequireCache;\nexports.clearRequireCacheInDir = clearRequireCacheInDir;\n","/home/travis/build/npmtest/node-npmtest-react-engine/node_modules/react-engine/lib/reactRouterServerErrors.js":"/*-------------------------------------------------------------------------------------------------------------------*\\\n|  Copyright (C) 2016 PayPal                                                                                          |\n|                                                                                                                     |\n|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n|  with the License.                                                                                                  |\n|                                                                                                                     |\n|  You may obtain a copy of the License at                                                                            |\n|                                                                                                                     |\n|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n|                                                                                                                     |\n|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n|  the specific language governing permissions and limitations under the License.                                     |\n\\*-------------------------------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nvar errorTypes = ['MATCH_REDIRECT',\n                  'MATCH_NOT_FOUND',\n                  'MATCH_INTERNAL_ERROR'];\n\nvar properties = {};\n\nerrorTypes.map(function(errorType) {\n  properties[errorType] = {\n    configurable: false,\n    writable: false,\n    enumerable: true,\n    value: errorType\n  };\n});\n\n/*\n  export the reactRouterServerErrors object\n  {\n    MATCH_REDIRECT: 'MATCH_REDIRECT',\n    MATCH_NOT_FOUND: 'MATCH_NOT_FOUND',\n    MATCH_INTERNAL_ERROR: 'MATCH_INTERNAL_ERROR'\n  }\n*/\nmodule.exports = Object.create(null, properties);\n","/home/travis/build/npmtest/node-npmtest-react-engine/node_modules/react-engine/lib/performance.js":"/*-------------------------------------------------------------------------------------------------------------------*\\\n|  Copyright (C) 2016 PayPal                                                                                          |\n|                                                                                                                     |\n|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n|  with the License.                                                                                                  |\n|                                                                                                                     |\n|  You may obtain a copy of the License at                                                                            |\n|                                                                                                                     |\n|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n|                                                                                                                     |\n|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n|  the specific language governing permissions and limitations under the License.                                     |\n\\*-------------------------------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nmodule.exports = function Performance(name) {\n\n  var startTime = Date.now();\n  var time = process.hrtime();\n\n  return function end() {\n\n    var diff = process.hrtime(time);\n\n    // duration in milliseconds\n    var duration = diff[0] + (diff[1] / 1000000);\n\n    return {\n      name: name,\n      startTime: startTime,\n      endTime: Date.now(),\n      duration: duration\n    };\n  };\n};\n","/home/travis/build/npmtest/node-npmtest-react-engine/node_modules/react-engine/lib/client.js":"/*-------------------------------------------------------------------------------------------------------------------*\\\n|  Copyright (C) 2016 PayPal                                                                                          |\n|                                                                                                                     |\n|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n|  with the License.                                                                                                  |\n|                                                                                                                     |\n|  You may obtain a copy of the License at                                                                            |\n|                                                                                                                     |\n|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n|                                                                                                                     |\n|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n|  the specific language governing permissions and limitations under the License.                                     |\n\\*-------------------------------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nvar Config = require('./config.json');\nvar ReactDOM = require('react-dom');\nvar assign = require('lodash/assign');\n\n// declaring like this helps in unit test\n// dependency injection using `rewire` module\nvar _window;\nvar _document;\nif (typeof window !== 'undefined' && typeof document !== 'undefined') {\n  _window = window;\n  _document = document;\n}\n\n// returns the data/state that was\n// injected by server during rendering\nvar data = exports.data = function data() {\n  // this file needs to be a external js file\n  var element = document.getElementById(Config.client.markupId);\n  // grab the contents from the script element\n  var jsonString = element.textContent || element.innerText;\n  // parse the text contents to JSON\n  return JSON.parse(jsonString);\n};\n\n// the client side boot function\nexports.boot = function boot(options, callback) {\n\n  var React = require('react');\n  var Router;\n  var RouterComponent;\n  var match;\n  var browserHistory;\n\n  try {\n    Router = require('react-router');\n    RouterComponent = Router.Router;\n    match = Router.match;\n\n    // compatibility for both `react-router` v2 and v1\n    browserHistory = Router.browserHistory || require('history').createHistory();\n  } catch (err) {\n    if (!Router && options.routes) {\n      throw new Error('asking to use react router for rendering, but no routes are provided');\n    }\n  }\n\n  var router;\n  var history;\n  var location;\n  var viewResolver = options.viewResolver;\n\n  // pick up the state that was injected by server during rendering\n  var props = data();\n  var useRouter = (props.__meta.view === null);\n  var mountNode = options.mountNode || _document;\n\n  if (useRouter) {\n\n    history = options.history || browserHistory;\n    location = _window.location.pathname +\n      _window.location.search + _window.location.hash;\n\n    // Wrap the 'render' function within a call to 'match'. This is a workaround to support\n    // users using code splitting functionality\n    match({ routes: options.routes, location: location }, function() {\n\n      // for any component created by react-router, merge model data with the routerProps\n      // NOTE: This may be imposing too large of an opinion?\n      var routerComponent = React.createElement(RouterComponent, {\n        createElement: function(Component, routerProps) {\n          return React.createElement(Component, assign({}, props, routerProps));\n        },\n\n        routes: options.routes,\n        history: history\n      });\n\n      ReactDOM.render(routerComponent, mountNode);\n    });\n\n  } else {\n    // get the file from viewResolver supplying it with a view name\n    var view = viewResolver(props.__meta.view);\n\n    // create a react view factory\n    var viewFactory = React.createFactory(view);\n\n    // render the factory on the client\n    // doing this, sets up the event\n    // listeners and stuff aka mounting views.\n    ReactDOM.render(viewFactory(props), mountNode);\n  }\n\n  // call the callback with the data that was used for rendering\n  return callback && callback(props, history);\n};\n","/home/travis/build/npmtest/node-npmtest-react-engine/node_modules/react-engine/lib/expressView.js":"/*-------------------------------------------------------------------------------------------------------------------*\\\n|  Copyright (C) 2016 PayPal                                                                                          |\n|                                                                                                                     |\n|  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance     |\n|  with the License.                                                                                                  |\n|                                                                                                                     |\n|  You may obtain a copy of the License at                                                                            |\n|                                                                                                                     |\n|       http://www.apache.org/licenses/LICENSE-2.0                                                                    |\n|                                                                                                                     |\n|  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed   |\n|  on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for  |\n|  the specific language governing permissions and limitations under the License.                                     |\n\\*-------------------------------------------------------------------------------------------------------------------*/\n\n'use strict';\n\nvar util = require('./util');\nvar format = require('util').format;\nvar inherit = require('util').inherits;\nvar debug = require('debug')(require('../package').name);\nvar url = require('url');\n\nvar View = util.safeRequire('express/lib/view');\n\nfunction ReactEngineView(name, options) {\n  debug(format('ReactEngineView :constructor: name: %s and options: %j',\n                  name, options));\n\n  // when the view name starts with `/` we assume\n  // that we need to use react router to render.\n  this.useRouter = (name[0] === '/');\n\n  if (this.useRouter) {\n    name = url.parse(name).path;\n  }\n\n  View.call(this, name, options);\n}\n\n// inherit form express view\ninherit(ReactEngineView, View);\n\nReactEngineView.prototype.lookup = function lookup(name) {\n  debug(format('ReactEngineView :lookup: name: %s', name));\n  if (this.useRouter) {\n    return name;\n  } else {\n    return View.prototype.lookup.call(this, name);\n  }\n};\n\nReactEngineView.prototype.render = function render(options, fn) {\n  debug(format('ReactEngineView :render:'));\n  if (this.useRouter) {\n    this.engine(this.name, options, fn);\n  } else {\n    return View.prototype.render.call(this, options, fn);\n  }\n};\n\nmodule.exports = ReactEngineView;\n"}